name: Deploy Web Profile

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Debug Environment Variables
        run: |
          echo "NEXTAUTH_URL: ${{ vars.NEXTAUTH_URL }}"
          echo "NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}"

      - name: 'Create env file'
        run: |
          touch .env
          echo NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }} >> .env
          echo NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} >> .env
          cat .env

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Login to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image web profile
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/web-profile:latest
          
      - name: Build and push Docker image nginx
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nginx:alpine-slim

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            # Check if Docker network exists
            if [[ -z $(sudo docker network ls --format '{{.Name}}' | grep 'web_profile_network') ]]; then
              echo "Creating Docker network"
              sudo docker network create web_profile_network
            else
              echo "Docker network 'web_profile_network' already exists, skipping creation."
            fi
      
            # Stop and remove existing containers (if any)
            sudo docker stop next-app nginx || true
            sudo docker rm next-app nginx || true
      
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/web-profile:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nginx:alpine-slim

            sudo docker system prune --force
      
            sudo docker run -d --name next-app -p 3000:3000 --network web_profile_network ${{ secrets.DOCKER_USERNAME }}/web-profile:latest
            sudo docker run -d --name nginx -p 80:80 --network web_profile_network ${{ secrets.DOCKER_USERNAME }}/nginx:alpine-slim
